apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId "com.example.Flickr"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.kotlin.stdlib

    //support
    implementation deps.support.app_compat
    implementation deps.support.core_ktx
    implementation deps.support.design
    implementation deps.constraint_layout
    implementation deps.support.paging

    //coroutines
    implementation deps.coroutines.android
    implementation deps.coroutines.core

    //lifecycle ext
    implementation deps.lifecycle.ext
    implementation deps.lifecycle.livedata
    implementation deps.lifecycle.viewmodel

    //glide
    implementation deps.glide.core
    kapt deps.glide.compiler

    //dagger
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    kapt deps.dagger.android_support_compiler
    kapt deps.dagger.compiler

    //network
    implementation deps.network.retrofit
    implementation deps.network.gson
    implementation deps.network.okhttp_logging_interceptor

    // Android Testing Support Library's runner and rules
    testImplementation deps.junit
    androidTestImplementation deps.test.runner
    androidTestImplementation deps.test.rules
    androidTestImplementation deps.test.ext_junit
}
